kind: pipeline
type: docker
name: build-runner-base-empty

volumes:
  - name: dockersocket
    host:
      path: /var/run/docker.sock

steps:
- name: publish-runner
  image: plugins/docker
  environment:
    HF_TOKEN:
      from_secret: HF_TOKEN
  pull: always
  settings:
    dockerfile: Dockerfile.runner
    tags:
    - "${DRONE_TAG:-main}-empty" # Default to branch
    - "latest-empty"
    daemon_off: true
    registry: registry.helixml.tech
    repo: registry.helixml.tech/helix/runner-base
    username: admin
    password:
      from_secret: helix_registry_password
    secret: id=HF_TOKEN,env=HF_TOKEN
  volumes:
  - name: dockersocket
    path: /var/run/docker.sock
  when:
    branch:
    - main
    event:
    - tag
    # Only build on tag, so that common case of merge to main & immediately tag
    # doesn't result in concurrent huge builds. Note if changing this you need
    # to change it in all 3 places in this file.
    # - push

---
kind: pipeline
type: docker
name: build-runner-base-small

volumes:
  - name: dockersocket
    host:
      path: /var/run/docker.sock

steps:
- name: publish-runner
  image: plugins/docker
  environment:
    HF_TOKEN:
      from_secret: HF_TOKEN
  pull: always
  settings:
    dockerfile: Dockerfile.runner
    tags:
    - "${DRONE_TAG:-main}-small" # Default to branch
    - "latest-small"
    daemon_off: true
    registry: registry.helixml.tech
    repo: registry.helixml.tech/helix/runner-base
    build_args:
      # Small models only
      - PULL_OLLAMA_MODELS=qwen3:8b
    secret: id=HF_TOKEN,env=HF_TOKEN
    username: admin
    password:
      from_secret: helix_registry_password
  volumes:
  - name: dockersocket
    path: /var/run/docker.sock
  when:
    branch:
    - main
    event:
    - tag
    # Only build on tag, so that common case of merge to main & immediately tag
    # doesn't result in concurrent huge builds.
    # - push

depends_on:
- build-runner-base-empty

---
kind: pipeline
type: docker
name: build-runner-base-large

volumes:
  - name: dockersocket
    host:
      path: /var/run/docker.sock

steps:
- name: publish-runner
  image: plugins/docker
  environment:
    HF_TOKEN:
      from_secret: HF_TOKEN
  pull: always
  settings:
    dockerfile: Dockerfile.runner
    tags:
    - "${DRONE_TAG:-main}-large"
    - "latest-large"
    daemon_off: true
    registry: registry.helixml.tech
    repo: registry.helixml.tech/helix/runner-base
    build_args:
      # We put models we're confident in keeping around for a long time in a
      # big base layer, and have a smaller layers on top for models that might
      # change more frequently and that we can add to without churning the
      # 100GB base
      - PULL_OLLAMA_MODELS=qwen3:8b,gpt-oss:20b
      - PULL_OLLAMA_MODELS_PHASE_2=gpt-oss:120b
      - PULL_OLLAMA_MODELS_PHASE_3=qwen3:30b,qwen2.5vl:32b
      - PULL_OLLAMA_MODELS_PHASE_4=qwen3:32b
      # disabled for now because not better than flux and trying to minimize disk usage
      # - PULL_DIFFUSERS_MODELS_STABLEDIFFUSION=true
      # disabled for now because downloading FLUX from HF fails?!
      # - PULL_DIFFUSERS_MODELS_FLUX=true
    secret: id=HF_TOKEN,env=HF_TOKEN
    username: admin
    password:
      from_secret: helix_registry_password
  volumes:
  - name: dockersocket
    path: /var/run/docker.sock
  when:
    branch:
    - main
    event:
    - tag
    # Only build on tag, so that common case of merge to main & immediately tag
    # doesn't result in concurrent huge builds.
    # - push

depends_on:
- build-runner-base-small
